<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE xep SYSTEM 'xep.dtd' [
  <!ENTITY % ents SYSTEM 'xep.ent'>
  %ents;
]>
<?xml-stylesheet type='text/xsl' href='xep.xsl'?>
<xep>
  <header>
    <title>Pubsub Social Feed</title>
    <abstract>This specification defines a way of publishing social content over XMPP.</abstract>
    &LEGALNOTICE;
    <number>0472</number>
    <status>Experimental</status>
    <type>Standards Track</type>
    <sig>Standards</sig>
    <approver>Council</approver>
    <dependencies>
      <spec>XMPP Core</spec>
      <spec>XMPP IM</spec>
      <spec>XEP-0060</spec>
      <spec>RFC 4287</spec>
    </dependencies>
    <supersedes>
      <spec>XEP-0277</spec>
    </supersedes>
    <supersededby />
    <shortname>psf</shortname>
    <author>
      <firstname>Timoth√©e</firstname>
      <surname>Jaussoin</surname>
      <email>edhelas@movim.eu</email>
      <jid>edhelas@movim.eu</jid>
      <uri>https://edhelas.movim.eu</uri>
    </author>
    <revision>
      <version>0.2.0</version>
      <date>2023-04-03</date>
      <initials>tj</initials>
      <remark>
        <ul>
          <li>Change the pubsub#type to be consistent with other XEPs</li>
          <li>Add a Discovery section</li>
        </ul>
      </remark>
    </revision>
    <revision>
      <version>0.1.1</version>
      <date>2022-12-24</date>
      <initials>tj</initials>
      <remark>
        <ul>
          <li>Change the specified pubsub#type profiles to be more consistent</li>
          <li>Rephrase some paragraphs</li>
          <li>Fix examples formating</li>
        </ul>
      </remark>
    </revision>
    <revision>
      <version>0.1.0</version>
      <date>2022-12-13</date>
      <initials>XEP Editor (jsc)</initials>
      <remark>Accepted by vote of Council on 2022-10-19.</remark>
    </revision>
    <revision>
      <version>0.0.1</version>
      <date>2022-09-26</date>
      <initials>tj</initials>
      <remark>Initial version.</remark>
    </revision>
  </header>

  <section1 topic='Introduction' anchor='intro'>
    <p>Social Networking plaftorms are often built around the concept of feeds. XMPP offers, through &xep0060;, a really generic way of Publishing and Subscribing elements on XMPP nodes. This extension defines a way to publish social content on Pubsub nodes using &rfc4287;</p>

    <p>Social features in XMPP were historically built on the &xep0277; specifications. However, in practice, Microblogging was not clearly defined in more common cases such as on generic Pubsub nodes and it was not easy to differentiate social nodes from the other ones. The current XEP defines a more generic way of handling Social Feeds on XMPP by declaring a secific pubsub#type for those Pubsub nodes and by keeping &xep0277; as a subset of it.</p>
  </section1>

  <section1 topic='Glossary' anchor='glossary'>
    <dl>
      <di>
        <dt>Profile</dt>
        <dd>
          Defined by a specific Pubsub type (pubsub#type) a profile is a Pubsub Social Feed with some constraints. See the
          <link url="#profiles">Profiles</link>
          section.
        </dd>
      </di>
    </dl>
  </section1>

  <section1 topic='Discovery' anchor='discovery'>
    <p>If an entity implements Pubsub Social Feed, it MUST specify the 'urn:xmpp:pubsub-social-feed:1' feature in its service discovery information features as specified in &xep0030; and the Entity Capabilities profile specified in &xep0115;.</p>

    <p>If the entity is also implementing specific profiles, it MUST expose the specific feature defined in the related Pubsub type.</p>

    <example caption='The entity responds with specific features profiles'><![CDATA[
  <iq type='result'
      id='disco1'
      from='juliet@capulet.lit/sabo239'
      to='romeo@montegue.lit/30d3d8'>
    <query xmlns='http://jabber.org/protocol/disco#info'>
      ...
      <feature var='urn:xmpp:pubsub-social-feed:1'/>
      <feature var='urn:xmpp:pubsub-social-feed:gallery:1'/>
      ...
    </query>
  </iq>
  ]]></example>
  </section1>

  <section1 topic='Protocol' anchor='protocol'>
    <section2 topic='Location' anchor='location'>
      <p>
        A Pubsub Social Feed can be located on any Pubsub node on the XMPP network. Some specific use cases, such as the personal eventing (PEP) node Microblog is defined in the
        <link url="#profiles">Profiles</link>
        section.
      </p>
    </section2>

    <section2 topic='Publishing a Post' anchor='publish'>
      <p>The publication of a Post consist of a valid &rfc4287; entry embeded in a &xep0060; item.</p>
      <p>The post content itself can be either text (content element without "type" attribute or with "type" attribute with "text" value) or XHTML ("content" element "type" attribute with "xhtml" value). If Romeo publishes XHTML content, his client MUST publish two "content" elements: a text one, and a XHTML one. For XHTML publishing, see &xep0060;.</p>
      <example caption="Publishing a post"><![CDATA[
<iq from='romeo@montague.lit/pda'
    id='pub1'
    to='new.montague.lit'
    type='set'>
  <pubsub xmlns='http://jabber.org/protocol/pubsub'>
    <publish node='montague-family'>
      <item id='1cb57d9c-1c46-11dd-838c-001143d5d5db'>
        <entry xmlns='http://www.w3.org/2005/Atom'>
          <title type='text'>hanging out at the Caf&amp;#233; Napolitano</title>
          <id>tag:montague.lit,2008-05-08:posts-1cb57d9c-1c46-11dd-838c-001143d5d5db</id>
          <published>2008-05-08T18:30:02Z</published>
          <updated>2008-05-08T18:30:02Z</updated>
        </entry>
      </item>
    </publish>
  </pubsub>
</iq>
]]></example>
      <p>Note: The "title" element is required to be included in an "atom:entry" element according to &rfc4287;. An implementation MAY provide also "atom:summary" and/or "atom:content" elements too if it needs.</p>
      <section3 topic="Publishing a Post with Rich Content" anchor="rich_content">
        <p>It's possible to insert some rich content in the post. It can be some text formatting, images, etc. Only "xhtml" content type is supported for the moment by this document but possibly it will be extended later.</p>
        <example caption="Publishing a post with rich content"><![CDATA[
<iq from='romeo@montague.lit/pda'
    id='pub2'
    to='news.montague.lit'
    type='set'>
  <pubsub xmlns='http://jabber.org/protocol/pubsub'>
    <publish node='montague-family'>
      <item id='1cb57d9c-1c46-11dd-838c-001143d5d5db'>
        <entry xmlns='http://www.w3.org/2005/Atom'>
          <title type='xhtml'>
            <div xmlns="http://www.w3.org/1999/xhtml">
              <p>hanging out at the <strong>Caf&amp;#233; Napolitano</strong></p>
            </div>
          </title>
          <id>tag:montague.lit,2008-05-08:posts-1cb57d9c-1c46-11dd-838c-001143d5d5db</id>
          <published>2008-05-08T18:30:02Z</published>
          <updated>2008-05-08T18:30:02Z</updated>
          <generator uri='https://capu.chat' version='42'>CapuChat</generator>
        </entry>
      </item>
    </publish>
  </pubsub>
</iq>
]]></example>
      </section3>
    </section2>
    <section2 topic='Receiving a Post' anchor='receive'>
      <p>
        Because Juliet is subscribed to some Romeo's family Pubsub service nodes. Romeo's XMPP server will send a Pubsub notification to Juliet. The notification can include an XMPP message body for backwards-compatibility with Jabber clients that are not pubsub-capable (see
        <link url="#body">Message Body</link>
        ).
      </p>
      <example caption="Receiving a post"><![CDATA[
<message from='news.montague.lit'
         to='juliet@capulet.lit'
         type='headline'>
  <body>hanging out at the Caf&amp;#233; Napolitano</body>
  <event xmlns='http://jabber.org/protocol/pubsub#event'>
    <items node='montague-family'>
      <item id='1cb57d9c-1c46-11dd-838c-001143d5d5db' publisher='romeo@montague.lit'>
        <entry xmlns='http://www.w3.org/2005/Atom'>
          <title type='text'>hanging out at the Caf&amp;#233; Napolitano</title>
          <link rel='alternate'
                type='text/html'
                href='http://montague.lit/romeo/posts/1cb57d9c-1c46-11dd-838c-001143d5d5db'/>
          <link rel='alternate'
                href='xmpp:news.montague.lit?;node=montague-family;item=1cb57d9c-1c46-11dd-838c-001143d5d5db'/>
          <id>tag:montague.lit,2008-05-08:posts-1cb57d9c-1c46-11dd-838c-001143d5d5db</id>
          <published>2008-05-08T18:30:02Z</published>
          <updated>2008-05-08T18:30:02Z</updated>
          <generator uri='https://capu.chat' version='42'>CapuChat</generator>
        </entry>
      </item>
    </items>
  </event>
</message>
]]></example>
      <p>Note: these alternate links were not posted by the original client because some clients can't compute them themselves. These things SHOULD be inserted at server side though.</p>
    </section2>
    <section2 topic='Replying to a Post' anchor='reply'>
      <p>Anyone can publish a post in reply to Romeo's post. Here we assume that a reply comes from Benvolio.</p>
      <p>Note: Inclusion of the "thr:in-reply-to" element defined in &rfc4685; indicates the post to which the user is replying. This reply includes two such elements (one pointing to the HTTP URL for the post and the other pointing to the XMPP URI for the post.</p>
      <p>Note: The post can be a reply to more than the only one another.</p>
      <example caption="Publishing a reply"><![CDATA[
<iq from='benvolio@montague.lit/mobile'
    id='uv2x37s5'
    to='news.montague.lit'
    type='set'>
  <pubsub xmlns='http://jabber.org/protocol/pubsub'>
    <publish node='montague-family'>
      <item id='c4145006-1c53-11dd-b2d5-000bcd82471e'>
        <entry xmlns='http://www.w3.org/2005/Atom'
               xmlns:thr='http://purl.org/syndication/thread/1.0'>
          <author>
            <name>Benvolio Montague</name>
            <uri>xmpp:romeo@montague.lit</uri>
          </author>
          <title type='text'>@romeo cappuccino this late in the day?</title>
          <link rel='alternate'
                type='text/html'
                href='http://montague.lit/benvolio/posts/c4145006-1c53-11dd-b2d5-000bcd82471e'/>
          <link rel='alternate'
                href='xmpp:news.montague.lit?;
                      node=montague-family;
                      item=c4145006-1c53-11dd-b2d5-000bcd82471e'/>
          <id>tag:montague.lit,2008-05-08:posts-c4145006-1c53-11dd-b2d5-000bcd82471e</id>
          <published>2008-05-08T18:31:21Z</published>
          <updated>2008-05-08T18:31:21Z</updated>
          <thr:in-reply-to
               ref='tag:montague.lit,2008-05-08:posts-1cb57d9c-1c46-11dd-838c-001143d5d5db'
               type='application/xhtml+xml'
               href='http://montague.lit/romeo/posts/1cb57d9c-1c46-11dd-838c-001143d5d5db'/>
          <thr:in-reply-to
               ref='tag:montague.lit,2008-05-08:posts-1cb57d9c-1c46-11dd-838c-001143d5d5db'
               href='xmpp:news.montague.lit?;node=montague-family;item=1cb57d9c-1c46-11dd-838c-001143d5d5db'/>
        </entry>
      </item>
    </publish>
  </pubsub>
</iq>
]]></example>
      <p>Assuming that Romeo has also subscribed to the same node he will receive the reply that Benvolio sent.</p>
    </section2>
    <section2 topic='Repeating a Post' anchor='repeat'>
      <p>When Benvolio wants to repeat a Romeo's post, his client publishes the same post under a different name. But to be able to track the repeated post original author, Benvolio's client MAY use specific "atom:author" child node, "atom:name" and "atom:uri", containing, respectively, the name of the original post author, and his XMPP URI (JID).</p>
      <p>The client SHOULD also put an "atom:link" element with "rel" attribute set to "via" and point it to the original post.</p>
      <example caption="Repeating a Post"><![CDATA[
<iq from='benvolio@montague.lit/mobile'
    id='pub2'
    to='news.montague.lit'
    type='set'>
  <pubsub xmlns='http://jabber.org/protocol/pubsub'>
    <publish node='montague-family'>
      <item id='1re57d3c-1q46-11dd-748r-024943d2d5rt'>
        <entry xmlns='http://www.w3.org/2005/Atom'>
          <author>
            <name>Romeo Montague</name>
            <uri>xmpp:romeo@montague.lit</uri>
          </author>
          <title type='text'>hanging out at the Caf&amp;#233; Napolitano</title>
          <link rel='alternate'
                type='text/html'
                href='http://montague.lit/benvolio/posts/1re57d3c-1q46-11dd-748r-024943d2d5rt'/>
          <link rel='alternate'
                href='xmpp:news.montague.lit?;node=montague-family;item=1re57d3c-1q46-11dd-748r-024943d2d5rt'/>
          <link rel='via'
                href='xmpp:rnews.montague.lit?;node=montague-family;item=1cb57d9c-1c46-11dd-838c-001143d5d5db'
                ref='tag:montague.lit,2008-05-08:posts-1cb57d9c-1c46-11dd-838c-001143d5d5db'/>
          <id>tag:montague.lit,2008-05-08:posts-1re57d3c-1q46-11dd-748r-024943d2d5rt</id>
          <published>2008-05-08T18:30:02Z</published>
          <updated>2008-05-08T18:32:02Z</updated>
        </entry>
      </item>
    </publish>
  </pubsub>
</iq>
]]>
      </example>
      <p>Thus, a different author JID value lets the client know the item has been repeated from another one.</p>
      <p>It's also possible for Benvolio to add his own thougths to the repost. To do this he SHOULD wrap the original content in the "xhtml:blockquote" element and after it add his own content. Also, the client MAY post reply without quotation to the original thread to inform users about the repost.</p>
    </section2>

    <section2 topic='Atom and XMPP integration' anchor='atom_xmpp_integration'>
      <section3 topic="Pubsub Item ID vs. Atom Entry id" anchor="pubsub_id_vs_atom_id">
        <p>There are two different things that carry a similar sense: the XMPP Pubsub Item ID and the "atom:id" element. This section is devoted to make a separation between them.</p>
        <p>The pubsub Item ID MUST be used when linking to an entry with an XMPP channel (i.e. by including it in the URI with the "xmpp" schema). the Atom entry ID MUST be built according to &rfc4287; and used in aggregators with the aim of revealing of post duplicates, reposts, mentions, syndications, etc.</p>
        <p>Note that the rules of comparing, building and security notes for "atom:id" are listed in the &rfc4287;.</p>
      </section3>
      <section3 topic='Message Body' anchor='body'>
        <p>Depending on service policies and the value of the "pubsub#include_body" node configuration option, Pubsub Social Feed notifications SHOULD include a message "body" element for backwards-compatibility with Jabber clients that are not pubsub-capable. It is RECOMMENDED for the XML character value of the "body" element to be the same as that of the "atom:title" child of the "atom:entry".</p>
      </section3>
      <section3 topic='Geotagging' anchor='geotagging'>
        <p>Juliet may want to know which places are Romeo's notices related to. That's why Romeo's client MAY geotag microblog entries, using the &xep0080; protocol for storing geolocation information.</p>
        <p>Romeo's client MUST create a "geoloc" element, with the &xep0080; reference namespace: "http://jabber.org/protocol/geoloc".</p>
        <example caption="Geotagging a Post"><![CDATA[
<iq from='romeo@montague.lit/mobile'
    id='pub7'
    to='romeo@montague.lit'
    type='set'>
  <pubsub xmlns='http://jabber.org/protocol/pubsub'>
    <publish node='urn:xmpp:microblog:0'>
      <item id='1zr23z8a-3g12-34fh-750b-120867gjc1sqh'>
        <entry xmlns='http://www.w3.org/2005/Atom'>
          <author>
            <name>Romeo Montague</name>
            <uri>xmpp:romeo@montague.lit</uri>
          </author>
          <title type='text'>Is lost in the forest. Need help!</title>
          <id>tag:montague.lit,2008-05-08:posts-1zr23z8a-3g12-34fh-750b-120867gjc1sqh</id>
          <published>2008-05-08T18:43:01Z</published>
          <updated>2008-05-08T18:43:01Z</updated>
          <geoloc xmlns="http://jabber.org/protocol/geoloc">
            <lat>48.171761</lat>
            <lon>-3.3667986</lon>
            <country>France</country>
            <countrycode>FR</countrycode>
            <region>Brittany</region>
          </geoloc>
        </entry>
      </item>
    </publish>
  </pubsub>
</iq>
]]></example>
      </section3>
    </section2>
  </section1>

  <section1 topic="Profiles" anchor="profiles">
    <p>Pubsub Social feeds are specified under profiles. Those profiles are constraints applied to nodes and defined by a specific Pubsub type (see &xep0060;#registrar-formtypes-metadata)</p>
    <p>
      All the profiles MUST base their default configuration on the
      <link url="#profile_base">Base profile</link>
      .
    </p>

    <section2 topic="Base profile" anchor="profile_base">
      <p>This profile is specified by the Pubsub type "urn:xmpp:pubsub-social-feed:1" and define a generic Pubsub Social Feed that can be hosted on any Pubsub service node or &xep0163; node.</p>
      <p>Those restrictions MUST be used by all the other profiles defined bellow and in other XEPs based on Pubsub Social Feed.</p>

      <section3 topic="Pubsub Node Configuration" anchor="profile_base_node_config">
        <ol>
          <li>The "pubsub#notify_retract" MUST be set to "true" to provide clients the ability to track if some items were retracted and reflect such changes in the UI correctly.</li>
          <li>The "pubsub#max_items" MUST be set to the "max" value, as defined in the &xep0060;.</li>
          <li>The "pubsub#persist_items" MUST be set to "true".</li>
          <li>The "pubsub#send_last_published_item" SHOULD be set to "never".</li>
          <li>The "pubsub#deliver_payloads" SHOULD be set to "false". The social content can be quite large so it is advised to let the clients to manually query the content if it is not already cached.</li>
        </ol>
      </section3>
    </section2>

    <section2 topic="Microblog profile" anchor="profile_microblog">
      <p>This profile is defined by the Pubsub type "urn:xmpp:microblog:0" as defined in &xep0277; and MUST be created and configured under the PEP "urn:xmpp:microblog:0" node.</p>
    </section2>

    <section2 topic="Gallery profile" anchor="profile_gallery">
      <p>This profile is defined by the Pubsub type "urn:xmpp:pubsub-social-feed:gallery:1" and can be hosted on any Pubsub service.</p>
      <p>All the items published in a gallery node MUST only have at least one attached picture. This picture MUST be of type "enclosure" as specified in &rfc4287;.</p>
      <example caption="An Atom attached picture"><![CDATA[
<link rel='enclosure' href='https://capulet.lit/upload/romeo.jpg' type='image/jpeg' title='Romeo Portrait'/>
]]></example>
    </section2>
  </section1>

  <section1 topic='Security Considerations' anchor='security'>
    <p>There are no security features or concerns related to this proposal.</p>
  </section1>

  <section1 topic='IANA Considerations' anchor='iana'>
    <p>This document requires no interaction with &IANA;.</p>
  </section1>

  <section1 topic='XMPP Registrar Considerations' anchor='registrar'>
    <p>The &REGISTRAR; is requested to issue an initial namespace of "urn:xmpp:pubsub-social-feed:1" and "urn:xmpp:pubsub-social-feed:gallery:1".</p>
  </section1>

  <section1 topic='XML Schema' anchor='schema'>
    <p>
      This specification re-uses the schema for the Atom content format, i.e., the 'http://www.w3.org/2005/Atom' namespace (see
      &rfc4287;
      ).
    </p>
  </section1>

</xep>